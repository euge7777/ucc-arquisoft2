version: '3.8'

services:
  # ==========================================
  # DATABASES
  # ==========================================

  mysql:
    image: mysql:8.0
    container_name: gym-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: proyecto_integrador
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gym-network

  mongo:
    image: mongo:7.0
    container_name: gym-mongo
    environment:
      MONGO_INITDB_DATABASE: gym_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gym-network

  # ==========================================
  # MESSAGE QUEUE
  # ==========================================

  rabbitmq:
    image: rabbitmq:3-management
    container_name: gym-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gym-network

  # ==========================================
  # CACHE
  # ==========================================

  memcached:
    image: memcached:1.6-alpine
    container_name: gym-memcached
    command: ["-m", "64"]  # 64MB memory limit
    ports:
      - "11211:11211"
    networks:
      - gym-network

  # ==========================================
  # SEARCH ENGINE
  # ==========================================

  solr:
    image: solr:9
    container_name: gym-solr
    ports:
      - "8983:8983"
    volumes:
      - solr_data:/var/solr
    command:
      - solr-precreate
      - gym_search  # Core name
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8983/solr/gym_search/admin/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gym-network

  # ==========================================
  # MICROSERVICES
  # ==========================================

  users-api:
    build:
      context: ./users-api
      dockerfile: Dockerfile
    container_name: gym-users-api
    environment:
      PORT: 8080
      DB_USER: root
      DB_PASS: root123
      DB_HOST: mysql
      DB_PORT: 3306
      DB_SCHEMA: proyecto_integrador
      JWT_SECRET: my-super-secret-jwt-key
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - gym-network
    restart: unless-stopped

  # TODO: Agregar subscriptions-api (MongoDB)
  # subscriptions-api:
  #   build:
  #     context: ./subscriptions-api
  #     dockerfile: Dockerfile
  #   container_name: gym-subscriptions-api
  #   environment:
  #     PORT: 8081
  #     MONGO_URI: mongodb://mongo:27017
  #     MONGO_DB: gym_db
  #     RABBITMQ_HOST: rabbitmq
  #     RABBITMQ_PORT: 5672
  #     RABBITMQ_USER: admin
  #     RABBITMQ_PASS: admin
  #     JWT_SECRET: my-super-secret-jwt-key
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #   networks:
  #     - gym-network
  #   restart: unless-stopped

  activities-api:
    build:
      context: ./activities-api
      dockerfile: Dockerfile
    container_name: gym-activities-api
    environment:
      PORT: 8082
      DB_USER: root
      DB_PASS: root123
      DB_HOST: mysql
      DB_PORT: 3306
      DB_SCHEMA: proyecto_integrador
      JWT_SECRET: my-super-secret-jwt-key
      # TODO: Descomentar cuando el equipo implemente RabbitMQ
      # RABBITMQ_HOST: rabbitmq
      # RABBITMQ_PORT: 5672
      # RABBITMQ_USER: admin
      # RABBITMQ_PASS: admin
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      # rabbitmq:  # TODO: Descomentar cuando implementen RabbitMQ
      #   condition: service_healthy
    networks:
      - gym-network
    restart: unless-stopped

  # TODO: Agregar payments-api (MongoDB)
  # payments-api:
  #   build:
  #     context: ./payments-api
  #     dockerfile: Dockerfile
  #   container_name: gym-payments-api
  #   environment:
  #     PORT: 8083
  #     MONGO_URI: mongodb://mongo:27017
  #     MONGO_DB: gym_db
  #   ports:
  #     - "8083:8083"
  #   depends_on:
  #     mongo:
  #       condition: service_healthy
  #   networks:
  #     - gym-network
  #   restart: unless-stopped

  # TODO: Agregar search-api (Solr + Memcached + RabbitMQ)
  # search-api:
  #   build:
  #     context: ./search-api
  #     dockerfile: Dockerfile
  #   container_name: gym-search-api
  #   environment:
  #     PORT: 8084
  #     SOLR_HOST: solr
  #     SOLR_PORT: 8983
  #     SOLR_CORE: gym_search
  #     MEMCACHED_HOST: memcached
  #     MEMCACHED_PORT: 11211
  #     MEMCACHED_TTL_SECONDS: 60
  #     RABBITMQ_HOST: rabbitmq
  #     RABBITMQ_PORT: 5672
  #     RABBITMQ_USER: admin
  #     RABBITMQ_PASS: admin
  #     RABBITMQ_QUEUE_NAME: gym-events
  #   ports:
  #     - "8084:8084"
  #   depends_on:
  #     solr:
  #       condition: service_healthy
  #     rabbitmq:
  #       condition: service_healthy
  #     memcached:
  #       condition: service_started
  #   networks:
  #     - gym-network
  #   restart: unless-stopped

  # ==========================================
  # FRONTEND (OPCIONAL)
  # ==========================================

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: gym-frontend
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - users-api
  #     - subscriptions-api
  #     - activities-api
  #     - search-api
  #   networks:
  #     - gym-network

# ==========================================
# NETWORKS
# ==========================================

networks:
  gym-network:
    driver: bridge

# ==========================================
# VOLUMES
# ==========================================

volumes:
  mysql_data:
  mongo_data:
  rabbitmq_data:
  solr_data:
